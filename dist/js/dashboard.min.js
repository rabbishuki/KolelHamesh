angular.module('RDash', ['ui.bootstrap', 'ui.router', 'ngCookies']);
'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('RDash').config(['$stateProvider', '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {

        // For unmatched routes
        $urlRouterProvider.otherwise('/');

        // Application routes
        $stateProvider
            .state('index', {
                url: '/',
                templateUrl: 'templates/dashboard.html'
            })
            .state('tables', {
                url: '/tables',
                templateUrl: 'templates/tables.html'
            })
            .state('students', {
                url: '/students',
                templateUrl: 'templates/students.html',
                controller: 'studentController'
            });
    }
]);
/**
 * Alerts Controller
 */

angular
    .module('RDash')
    .controller('AlertsCtrl', ['$scope', AlertsCtrl]);

function AlertsCtrl($scope) {
    $scope.alerts = [{
        type: 'success',
        msg: 'Thanks for visiting! Feel free to create pull requests to improve the dashboard!'
    }, {
        type: 'danger',
        msg: 'Found a bug? Create an issue with as many details as you can.'
    }];

    $scope.addAlert = function() {
        $scope.alerts.push({
            msg: 'Another alert!'
        });
    };

    $scope.closeAlert = function(index) {
        $scope.alerts.splice(index, 1);
    };
}
/**
 * Master Controller
 */

angular.module('RDash')
    .controller('MasterCtrl', function MasterCtrl($scope, $cookies) {
        /**
         * Sidebar Toggle & Cookie Control
         */
        var mobileView = 992;

        $scope.getWidth = function () {
            return window.innerWidth;
        };

        $scope.logout = function () {
            document.cookie = 'token=; Max-Age=0; link=; Max-Age=0;';
            window.location.href = '/';
        }

        $scope.$watch($scope.getWidth, function (newValue, oldValue) {
            if (newValue >= mobileView) {
                if (angular.isDefined($cookies.get('toggle'))) {
                    $scope.toggle = !$cookies.get('toggle') ? false : true;
                } else {
                    $scope.toggle = true;
                }
            } else {
                $scope.toggle = false;
            }

        });

        $scope.toggleSidebar = function () {
            $scope.toggle = !$scope.toggle;
            $cookies.put('toggle', $scope.toggle);
        };

        $scope.role = $cookies.get('link');

        window.onresize = function () {
            $scope.$apply();
        };
    });
angular.module('RDash')
  .controller('studentController', function ($scope, Data) {
    Data.get('students').then(function (data) {
      $scope.students = data.students;
    })

    $scope.student = {};

    $scope.add = function () {
      $scope.display = true;
    };

    $scope.edit = function (id) {
      $scope.display = true;
      $scope.student = $scope.students[id];
      $scope.student.editId = id.toString();
    }

    $scope.save = function (valid) {
      if (!valid) {
        $scope.formErrors = true;
      } else if (valid) {
        var method = $scope.student.editId ? 'put' : 'post';
        Data[method]('students', { id: $scope.student.editId, student: $scope.student }).then(function (result) {

          Data.get('students').then(function (data) {
            $scope.students = data.students;
          })
        });

        $scope.close();
      }
    }

    $scope.close = function () {
      $scope.student = {};
      $scope.formErrors = false;
      $scope.display = false;
    }
  });
/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('RDash')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="spinner">' +
                     '<div class="bounce1"></div>' +
                     '<div class="bounce2"></div>' +
                     '<div class="bounce3"></div>' +
                  '</div>'
    };
    return directive;
};
/**
 * Widget Body Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '=?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Footer Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><div class="row"><div class="pull-right"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-left col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('RDash')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
 // This service connects to our REST API
 angular.module('RDash').factory("Data", function ($http) {

   var serviceBase = '/';

   var obj = {};

   obj.get = function (q, external) {
     var path = external ? q : serviceBase + q;
     return $http.get(path).then(function (results) {
       return results.data;
     });
   };
   obj.post = function (q, object) {
     return $http.post(serviceBase + q, object).then(function (results) {
       return results.data;
     });
   };
   obj.put = function (q, object) {
     return $http.put(serviceBase + q, object).then(function (results) {
       return results.data;
     });
   };
   obj.delete = function (q) {
     return $http.delete(serviceBase + q).then(function (results) {
       return results.data;
     });
   };
   
   return obj;
});